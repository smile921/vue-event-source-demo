* spring boot admin UI note
** dependencies
+ fortawesome for icons extension
+ axios
+ ansi_up     a convert ansi sequence in strings to colourful HTML
+ bulma       a morden flex CSS framework
+ d3
+ event-source-polyfill    receiving push notifications from a server
  + HTML5 EventSource
  + onopen	当通往服务器的连接被打开
  + onmessage	当接收到消息
  + onerror	当错误发生
+ linkifyjs     covert plantext url to valide url
+ lodash
+ moment
+ moment-shortformat
+ popper.js         a lib to position poppers
+ pretty-bytes      convert byte to human readable string
+ rxjs              Reactive Extensions For JavaScript
+ resize-observer-polyfill
+ yamljs            a javascript yaml parser lib
+ vue-clickaway     Reusable clickaway directive
** devDependencies
+ css-mqpacker      Pack same CSS media query rules into one using PostCSS
+ autoprefixer
+ cross-env         Run scripts that set and use environment variables across platforms
+ glob              Match files using the patterns the shell uses, like stars and stuff.
+ identity-obj-proxy        An identity object using ES6 proxies

** Webpack Notes

the below plugin will clean the dist directory
#+BEGIN_SRC javascript

new CleanWebpackPlugin(['dist'], {
      root: __dirname,
      verbose: true,
      dry: false,
    }),

#+END_SRC

the config below show that the output file name will be sba-core.[ext|js|css|js.map]
the target output path is ./dist 

#+BEGIN_SRC javascript

entry: {
    'sba-core': ['babel-polyfill', './src/main.js']
  },
  output: {
    path: resolve(__dirname, './dist'),
    filename: 'assets/js/[name].js',
    chunkFilename: 'assets/js/[name].js',
    publicPath: ''
  },

#+END_SRC

** RxJs 看起来很有魅力很吸引人
  少年有时间学习 RxJs 吧，不然要被淘汰了
*** 一些 RxJs 学习资料
+ [[https://juejin.im/post/5b3ad3666fb9a024f36ffdd5][RxJS实践，Vue如何集成RxJS]]
+ [[https://ithelp.ithome.com.tw/articles/10186104][30天精通 RxJs 系列]]
+ [[https://rxjs-cn.github.io/learn-rxjs-operators/][learn rxjs operators]]
+ [[http://reactivex.io/documentation/][document reactivex]]
+ [[http://reactivex.io/tutorials.html][rx tutorials]]
+ [[https://rxviz.com/][rx visualizer]]
+ [[http://reactive.how/][reactive how]]
+ [[https://gist.github.com/staltz/868e7e9bc2a7b8c1f754][introduce to Reactive Programming you have missing]]

** example RxJs
let requestStream = Rx.Observable.just('https://api.github.com/users');

requestStream.subscribe(function(requestUrl){
  //excute the request
  jQuery.getJSON(requestUrl,function(responseData){
    //...
  });
})

requestStream.subscribe(function(requestUrl){
  //excute the request
  let reqsponseStream = Rx.Observable.create(function(observer){
    jQuery.getJSON(requestUrl).
    done(function(response){
      observer.onNext(response);
    }).fail(function(jqXHR,status,error){
      observer.onError(error);
    }).always(function(){
      observer.onCompleted();
    })
  });
  reqsponseStream.subscribe(function(response){
    // do something with the response
  }); 
})

let responseMetastream = resquestStream.map(function(requestUrl){
  return Rx.Observable.fromPromise(jQuery.getJSON(requestUrl));
});


let responseStream = requestStream.flatMap(function(requestUrl){
  return Rx.Observable.fromPromise(jQuery.getJSON(requestUrl));
});

---- summary----
let requestStream = Rx.Observable.just('https://api.github.com/users');

let responseStream = resquestStream.flatMap(function(requestUrl){
  return Rx.Observable.fromPromise(jQuery.getJSON(requestUrl));
});

responseStream.subscribe(function(response){
  // render ....
});

...